import { VitePlugin, WebpackPluginInstance } from "unplugin";
import { Plugin } from "vuepress/core";

//#region src/options.d.ts
type Replacement = string | ((url: string) => string);
interface ReplacementRule {
  find: RegExp | string;
  replacement: Replacement;
}
interface ReplaceAssetsOptions {
  rules?: ReplacementRule | ReplacementRule[];
  all?: Replacement;
  image?: Replacement;
  media?: Replacement;
}
type ReplaceAssetsPluginOptions = Replacement | ReplacementRule | ReplacementRule[] | ReplaceAssetsOptions;
//#endregion
//#region src/normalizeRules.d.ts
declare function createFindPattern(extensions: string[]): RegExp;
declare function normalizeRules(options: ReplaceAssetsPluginOptions): ReplacementRule[];
//#endregion
//#region src/plugin.d.ts
declare function replaceAssetsPlugin(options?: ReplaceAssetsPluginOptions): Plugin;
//#endregion
//#region src/unplugin/transform.d.ts
declare function transformAssets(code: string, pattern: RegExp, rules: ReplacementRule[]): string;
declare function replacementAssetWithRules(rules: ReplacementRule[], url: string): string | void;
declare function isMatchUrl(find: string | RegExp, url: string): boolean;
//#endregion
//#region src/unplugin/index.d.ts
declare const createVitePlugin: () => (options: ReplacementRule[]) => VitePlugin | VitePlugin[];
declare const createWebpackPlugin: () => (options: ReplacementRule[]) => WebpackPluginInstance;
//#endregion
export { ReplaceAssetsOptions, ReplaceAssetsPluginOptions, Replacement, ReplacementRule, createFindPattern, createVitePlugin, createWebpackPlugin, isMatchUrl, normalizeRules, replaceAssetsPlugin, replacementAssetWithRules, transformAssets };